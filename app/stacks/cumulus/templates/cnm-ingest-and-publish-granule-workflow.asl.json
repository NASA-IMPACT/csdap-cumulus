{
  "Comment": "CNM-Driven Ingest and Publish",
  "StartAt": "CNMToGranule",
  "States": {
    "CNMToGranule": {
      "Parameters": {
        "cma": {
          "event.$": "$",
          "task_config": {
            "collection": "{$.meta.collection}",
            "cumulus_message": {
              "outputs": [
                {
                  "source": "{$.cnm}",
                  "destination": "{$.meta.granule.queryFields.cnm}"
                },
                {
                  "source": "{$.cnm}",
                  "destination": "{$.meta.cnm}"
                },
                {
                  "source": "{$.output}",
                  "destination": "{$.payload}"
                }
              ]
            }
          }
        }
      },
      "Type": "Task",
      "Resource": "${cnm_to_cma_task_arn}",
      "Next": "Try",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "Lambda.ClientExecutionTimeoutException",
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 6,
          "MaxAttempts": 6,
          "BackoffRate": 3,
          "JitterStrategy": "FULL"
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 8,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "CnmResponseFail",
          "ResultPath": "$.exception"
        }
      ]
    },
    "Try": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "RequireCmrFiles",
          "States": {
            "RequireCmrFiles": {
              "Type": "Task",
              "Resource": "${require_cmr_files_task_arn}",
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Next": "SyncGranule",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "SyncGranule": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "buckets": "{$.meta.buckets}",
                    "provider": "{$.meta.provider}",
                    "collection": "{$.meta.collection}",
                    "stack": "{$.meta.stack}",
                    "downloadBucket": "{$.meta.buckets.protected.name}",
                    "duplicateHandling": "{$.meta.collection.duplicateHandling}",
                    "pdr": "{$.meta.pdr}",
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        },
                        {
                          "source": "{$.process}",
                          "destination": "{$.meta.process}"
                        }
                      ]
                    }
                  }
                }
              },
              "Type": "Task",
              "Resource": "${sync_granule_task_arn}",
              "Next": "AddUmmgChecksums",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 6,
                  "MaxAttempts": 6,
                  "BackoffRate": 3,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "AddUmmgChecksums": {
              "Type": "Task",
              "Resource": "${add_ummg_checksums_task_arn}",
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Next": "AddMissingFileChecksums",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "AddMissingFileChecksums": {
              "Type": "Task",
              "Resource": "${add_missing_file_checksums_task_arn}",
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "algorithm": "md5",
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Next": "MoveGranule",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "MoveGranule": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "bucket": "{$.meta.buckets.protected.name}",
                    "buckets": "{$.meta.buckets}",
                    "distribution_endpoint": "{$.meta.distribution_endpoint}",
                    "collection": "{$.meta.collection}",
                    "duplicateHandling": "{$.meta.collection.duplicateHandling}"
                  }
                }
              },
              "Type": "Task",
              "Resource": "${move_granules_task_arn}",
              "Next": "UpdateMetadataFileLinks",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "UpdateMetadataFileLinks": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "buckets": "{$.meta.buckets}",
                    "distribution_endpoint": "{$.meta.distribution_endpoint}",
                    "cumulus_message": {
                      "outputs": [
                        {
                          "source": "{$.etags}",
                          "destination": "{$.meta.file_etags}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Type": "Task",
              "Resource": "${update_granules_cmr_metadata_file_links_task_arn}",
              "Next": "CopyToArchive",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "CopyToArchive": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "task_config": {
                    "s3MultipartChunksizeMb": "{$.meta.collection.meta.s3MultipartChunksizeMb}",
                    "excludedFileExtensions": "{$.meta.collection.meta.orca.excludedFileExtensions}",
                    "providerId": "{$.meta.provider.id}",
                    "providerName": "{$.meta.provider.name}",
                    "executionId": "{$.cumulus_meta.execution_name}",
                    "collectionShortname": "{$.meta.collection.name}",
                    "collectionVersion": "{$.meta.collection.version}",
                    "defaultBucketOverride": "{$.meta.collection.meta.orca.defaultBucketOverride}"
                  }
                }
              },
              "Type": "Task",
              "Resource": "${copy_to_archive_adapter_task_arn}",
              "Next": "PostToCmr",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            },
            "PostToCmr": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "bucket": "{$.meta.buckets.internal.name}",
                    "stack": "{$.meta.stack}",
                    "cmr": "{$.meta.cmr}",
                    "launchpad": "{$.meta.launchpad}",
                    "etags": "{$.meta.file_etags}"
                  }
                }
              },
              "Type": "Task",
              "Resource": "${post_to_cmr_task_arn}",
              "End": true,
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.Unknown",
                    "Lambda.ClientExecutionTimeoutException",
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 6,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                },
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 8,
                  "MaxAttempts": 3,
                  "BackoffRate": 2,
                  "JitterStrategy": "FULL"
                }
              ]
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "CnmResponseFail",
          "ResultPath": "$.exception"
        }
      ],
      "OutputPath": "$[0]",
      "Next": "CnmResponse"
    },
    "CnmResponse": {
      "Parameters": {
        "cma": {
          "event.$": "$",
          "task_config": {
            "OriginalCNM": "{$.meta.cnm}",
            "distribution_endpoint": "{$.meta.distribution_endpoint}",
            "response-endpoint": "{$.meta.cnmResponseStream}",
            "region": "us-west-2",
            "type": "{$.meta.cnmResponseMethod}",
            "WorkflowException": "{$.exception}",
            "cumulus_message": {
              "outputs": [
                {
                  "source": "{$.cnm}",
                  "destination": "{$.meta.granule.queryFields.cnm}"
                },
                {
                  "source": "{$.cnm}",
                  "destination": "{$.meta.cnmResponse}"
                },
                {
                  "source": "{$.input.input}",
                  "destination": "{$.payload}"
                }
              ]
            }
          }
        }
      },
      "Type": "Task",
      "Resource": "${cnm_response_task_arn}",
      "Next": "Succeeded",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "Lambda.ClientExecutionTimeoutException",
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 4,
          "MaxAttempts": 6,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 8,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.exception",
          "Next": "RecordFailure"
        }
      ]
    },
    "CnmResponseFail": {
      "Parameters": {
        "cma": {
          "event.$": "$",
          "task_config": {
            "OriginalCNM": "{$.meta.cnm}",
            "response-endpoint": "{$.meta.cnmResponseStream}",
            "region": "us-west-2",
            "type": "{$.meta.cnmResponseMethod}",
            "WorkflowException": "{$.exception}",
            "cumulus_message": {
              "outputs": [
                {
                  "source": "{$.cnm}",
                  "destination": "{$.meta.cnmResponse}"
                },
                {
                  "source": "{$.input.input}",
                  "destination": "{$.payload}"
                }
              ]
            }
          }
        }
      },
      "Type": "Task",
      "Resource": "${cnm_response_task_arn}",
      "Next": "RecordFailure",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "Lambda.ClientExecutionTimeoutException",
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 4,
          "MaxAttempts": 6,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 8,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.exception",
          "Next": "RecordFailure"
        }
      ]
    },
    "RecordFailure": {
      "Type": "Task",
      "Resource": "${record_workflow_failure_task_arn}",
      "Next": "Failed",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "Lambda.ClientExecutionTimeoutException",
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 4,
          "MaxAttempts": 6,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        },
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 8,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ]
    },
    "Succeeded": {
      "Type": "Succeed"
    },
    "Failed": {
      "Type": "Fail",
      "Cause": "Workflow failed"
    }
  }
}
