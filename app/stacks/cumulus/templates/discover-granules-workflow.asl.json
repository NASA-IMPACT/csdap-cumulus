{
  "Comment": "Discovers new Granules from a given provider",
  "TimeoutSeconds": 5184000,
  "StartAt": "SelfDiscovery?",
  "States": {
    "SelfDiscovery?": {
      "Comment": "Are we discovering granules from our own bucket?",
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.meta.provider.host",
          "StringEqualsPath": "$.meta.buckets.protected.name",
          "Next": "UseIngestedPathFormat"
        }
      ],
      "Default": "FormatProviderPaths"
    },
    "UseIngestedPathFormat": {
      "Comment": "Use the ingested path format for self-discovered granules",
      "Type": "Pass",
      "InputPath": "$.meta.ingestedPathFormat",
      "ResultPath": "$.meta.providerPathFormat",
      "Next": "FormatProviderPaths"
    },
    "FormatProviderPaths": {
      "Type": "Task",
      "Resource": "${format_provider_paths_task_arn}",
      "Next": "DiscoverGranulesMap"
    },
    "DiscoverGranulesMap": {
      "Type": "Map",
      "End": true,
      "MaxConcurrency": 10,
      "ToleratedFailurePercentage": 0,
      "ItemReader": {
        "Resource": "arn:aws:states:::s3:getObject",
        "ReaderConfig": {
          "InputType": "JSON"
        },
        "Parameters": {
          "Bucket.$": "$.bucket",
          "Key.$": "$.key"
        }
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "DISTRIBUTED",
          "ExecutionType": "STANDARD"
        },
        "StartAt": "Try",
        "States": {
          "Try": {
            "Comment": "try/catch task to simplify error handling",
            "Type": "Parallel",
            "OutputPath": "$[0]",
            "End": true,
            "Catch": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "Next": "HandleError",
                "ResultPath": "$.exception"
              }
            ],
            "Branches": [
              {
                "StartAt": "DiscoverGranules",
                "States": {
                  "DiscoverGranules": {
                    "Parameters": {
                      "cma": {
                        "event.$": "$",
                        "ReplaceConfig": {
                          "MaxSize": 0,
                          "Path": "$.payload",
                          "TargetPath": "$.payload"
                        },
                        "task_config": {
                          "provider": "{$.meta.provider}",
                          "provider_path": "{$.meta.providerPath}",
                          "collection": "{$.meta.collection}",
                          "buckets": "{$.meta.buckets}",
                          "stack": "{$.meta.stack}",
                          "duplicateGranuleHandling": "{$.meta.collection.duplicateHandling}"
                        }
                      }
                    },
                    "Type": "Task",
                    "Resource": "${discover_granules_task_arn}",
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException"
                        ],
                        "IntervalSeconds": 2,
                        "MaxAttempts": 6,
                        "BackoffRate": 2
                      }
                    ],
                    "Next": "BatchGranules"
                  },
                  "BatchGranules": {
                    "Comment": "Splits discovered granules into batches so the batches can be sent to a Map task for concurrent queueing.",
                    "Parameters": {
                      "Comment": "cma.ReplaceConfig.MaxSize MUST be 0 to ensure payload is always written to S3 because the batching replicates the CMA payload in memory, which would otherwise run the risk of exhausting memory.",
                      "cma": {
                        "event.$": "$",
                        "ReplaceConfig": {
                          "MaxSize": 0,
                          "Path": "$.payload",
                          "TargetPath": "$.payload"
                        },
                        "task_config": {
                          "providerPath": "{$.meta.providerPath}",
                          "maxBatchSize": "{$.meta.maxBatchSize}"
                        }
                      }
                    },
                    "Type": "Task",
                    "Resource": "${batch_granules_task_arn}",
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException"
                        ],
                        "IntervalSeconds": 2,
                        "MaxAttempts": 6,
                        "BackoffRate": 2
                      }
                    ],
                    "Next": "QueueGranulesMap"
                  },
                  "QueueGranulesMap": {
                    "Type": "Map",
                    "MaxConcurrency": 10,
                    "ToleratedFailurePercentage": 0,
                    "ItemsPath": "$",
                    "ItemProcessor": {
                      "StartAt": "UnbatchGranules",
                      "States": {
                        "UnbatchGranules": {
                          "Parameters": {
                            "cma": {
                              "event.$": "$",
                              "ReplaceConfig": {
                                "MaxSize": 16384,
                                "Path": "$.payload",
                                "TargetPath": "$.payload"
                              },
                              "task_config": {
                                "providerPath": "{$.meta.providerPath}",
                                "batchIndex": "{$.meta.batchIndex}"
                              }
                            }
                          },
                          "Type": "Task",
                          "Resource": "${unbatch_granules_task_arn}",
                          "Retry": [
                            {
                              "ErrorEquals": [
                                "Lambda.ServiceException",
                                "Lambda.AWSLambdaException",
                                "Lambda.SdkClientException"
                              ],
                              "IntervalSeconds": 2,
                              "MaxAttempts": 6,
                              "BackoffRate": 2
                            }
                          ],
                          "Next": "PrefixGranuleIds?"
                        },
                        "PrefixGranuleIds?": {
                          "Type": "Choice",
                          "Choices": [
                            {
                              "And": [
                                {
                                  "Variable": "$.meta.collection.meta.prefixGranuleIds",
                                  "IsPresent": true
                                },
                                {
                                  "Variable": "$.meta.collection.meta.prefixGranuleIds",
                                  "BooleanEquals": true
                                }
                              ],
                              "Next": "PrefixGranuleIds"
                            }
                          ],
                          "Default": "QueueGranules?"
                        },
                        "PrefixGranuleIds": {
                          "Parameters": {
                            "cma": {
                              "event.$": "$",
                              "ReplaceConfig": {
                                "MaxSize": 16384,
                                "Path": "$.payload",
                                "TargetPath": "$.payload"
                              },
                              "task_config": {
                                "collection": "{$.meta.collection}"
                              }
                            }
                          },
                          "Type": "Task",
                          "Resource": "${prefix_granule_ids_task_arn}",
                          "Retry": [
                            {
                              "ErrorEquals": [
                                "Lambda.ServiceException",
                                "Lambda.AWSLambdaException",
                                "Lambda.SdkClientException"
                              ],
                              "IntervalSeconds": 2,
                              "MaxAttempts": 6,
                              "BackoffRate": 2
                            }
                          ],
                          "Next": "QueueGranules?"
                        },
                        "QueueGranules?": {
                          "Type": "Choice",
                          "Choices": [
                            {
                              "And": [
                                {
                                  "Variable": "$.meta.discoverOnly",
                                  "IsPresent": true
                                },
                                {
                                  "Variable": "$.meta.discoverOnly",
                                  "BooleanEquals": true
                                }
                              ],
                              "Next": "DontQueueGranules"
                            }
                          ],
                          "Default": "QueueGranules"
                        },
                        "DontQueueGranules": {
                          "Type": "Pass",
                          "End": true
                        },
                        "QueueGranules": {
                          "Parameters": {
                            "cma": {
                              "event.$": "$",
                              "ReplaceConfig": {
                                "MaxSize": 16384,
                                "Path": "$.payload",
                                "TargetPath": "$.payload"
                              },
                              "task_config": {
                                "queueUrl": "${background_job_queue_url}",
                                "preferredQueueBatchSize": "{$.meta.collection.meta.preferredQueueBatchSize}",
                                "provider": "{$.meta.provider}",
                                "internalBucket": "{$.meta.buckets.internal.name}",
                                "stackName": "{$.meta.stack}",
                                "granuleIngestWorkflow": "${ingest_granule_workflow_name}",
                                "childWorkflowMeta": {}
                              }
                            }
                          },
                          "Type": "Task",
                          "End": true,
                          "Resource": "${queue_granules_task_arn}",
                          "Retry": [
                            {
                              "ErrorEquals": [
                                "Lambda.ServiceException",
                                "Lambda.AWSLambdaException",
                                "Lambda.SdkClientException"
                              ],
                              "IntervalSeconds": 2,
                              "MaxAttempts": 6,
                              "BackoffRate": 2
                            }
                          ]
                        }
                      }
                    },
                    "Next": "Success"
                  },
                  "Success": {
                    "Type": "Succeed"
                  }
                }
              }
            ]
          },
          "HandleError": {
            "Type": "Fail",
            "Cause": "Workflow failed"
          }
        }
      }
    }
  }
}
