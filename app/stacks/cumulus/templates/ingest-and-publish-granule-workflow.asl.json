{
  "StartAt": "Try",
  "States": {
    "Try": {
      "Type": "Parallel",
      "Branches": [
        {
          "Comment": "Ingest Granule",
          "StartAt": "RequireCmrFiles",
          "States": {
            "RequireCmrFiles": {
              "Type": "Task",
              "Resource": "${require_cmr_files_task_arn}",
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Next": "SyncGranule"
            },
            "SyncGranule": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "buckets": "{$.meta.buckets}",
                    "provider": "{$.meta.provider}",
                    "collection": "{$.meta.collection}",
                    "stack": "{$.meta.stack}",
                    "downloadBucket": "{$.meta.buckets.protected.name}",
                    "duplicateHandling": "{$.meta.collection.duplicateHandling}",
                    "pdr": "{$.meta.pdr}",
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        },
                        {
                          "source": "{$.process}",
                          "destination": "{$.meta.process}"
                        }
                      ]
                    }
                  }
                }
              },
              "Type": "Task",
              "Resource": "${sync_granule_task_arn}",
              "Next": "AddUmmgChecksums",
              "Retry": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 2,
                  "BackoffRate": 2,
                  "MaxAttempts": 3
                }
              ]
            },
            "AddUmmgChecksums": {
              "Type": "Task",
              "Resource": "${add_ummg_checksums_task_arn}",
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Next": "AddMissingFileChecksums"
            },
            "AddMissingFileChecksums": {
              "Type": "Task",
              "Resource": "${add_missing_file_checksums_task_arn}",
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "algorithm": "md5",
                    "cumulus_message": {
                      "input": "{$.payload}",
                      "outputs": [
                        {
                          "source": "{$.granules}",
                          "destination": "{$.meta.input_granules}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Next": "MoveGranule"
            },
            "MoveGranule": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "bucket": "{$.meta.buckets.protected.name}",
                    "buckets": "{$.meta.buckets}",
                    "distribution_endpoint": "{$.meta.distribution_endpoint}",
                    "collection": "{$.meta.collection}",
                    "duplicateHandling": "{$.meta.collection.duplicateHandling}"
                  }
                }
              },
              "Type": "Task",
              "Resource": "${move_granules_task_arn}",
              "Next": "UpdateMetadataFileLinks",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "States.TaskFailed"
                  ],
                  "IntervalSeconds": 2,
                  "BackoffRate": 2,
                  "MaxAttempts": 6
                }
              ]
            },
            "UpdateMetadataFileLinks": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "buckets": "{$.meta.buckets}",
                    "distribution_endpoint": "{$.meta.distribution_endpoint}",
                    "cumulus_message": {
                      "outputs": [
                        {
                          "source": "{$.etags}",
                          "destination": "{$.meta.file_etags}"
                        },
                        {
                          "source": "{$}",
                          "destination": "{$.payload}"
                        }
                      ]
                    }
                  }
                }
              },
              "Type": "Task",
              "Resource": "${update_granules_cmr_metadata_file_links_task_arn}",
              "Next": "CopyToArchive",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ]
            },
            "CopyToArchive":{
              "Parameters":{
                "cma":{
                  "event.$":"$",
                  "task_config": {
                    "excludedFileExtensions": "{$.meta.collection.meta.orca.excludedFileExtensions}",
                    "s3MultipartChunksizeMb": "{$.meta.collection.meta.s3MultipartChunksizeMb}",
                    "providerId": "{$.meta.provider.id}",
                    "providerName": "{$.meta.provider.name}",
                    "executionId": "{$.cumulus_meta.execution_name}",
                    "collectionShortname": "{$.meta.collection.name}",
                    "collectionVersion": "{$.meta.collection.version}",
                    "defaultBucketOverride": "{$.meta.collection.meta.orca.defaultBucketOverride}"
                  }
                }
              }
            },
              "Type":"Task",
              "Resource":"module.orca.orca_lambda_copy_to_archive_arn",
              "Catch":[
                {
                  "ErrorEquals":[
                    "States.ALL"
                  ],
                  "ResultPath":"$.exception",
                  "Next":"WorkflowFailed"
                }
              ],
              "Retry": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Next":"PostToCmr"
            },
            "PostToCmr": {
              "Parameters": {
                "cma": {
                  "event.$": "$",
                  "ReplaceConfig": {
                    "MaxSize": 16384,
                    "Path": "$.payload",
                    "TargetPath": "$.payload"
                  },
                  "task_config": {
                    "bucket": "{$.meta.buckets.internal.name}",
                    "stack": "{$.meta.stack}",
                    "cmr": "{$.meta.cmr}",
                    "launchpad": "{$.meta.launchpad}",
                    "etags": "{$.meta.file_etags}"
                  }
                }
              },
              "Type": "Task",
              "Resource": "${post_to_cmr_task_arn}",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "States.TaskFailed"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Failed",
          "ResultPath": "$.exception"
        }
      ],
      "OutputPath": "$[0]",
      "End": true
    },
    "Failed": {
      "Type": "Fail",
      "Cause": "Workflow failed"
    }
  }
}
