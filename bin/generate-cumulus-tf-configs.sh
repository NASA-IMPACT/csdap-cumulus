#!/usr/bin/env bash

set -Eeu

_script_dir=$(dirname "${BASH_SOURCE[0]}")
_root_dir="${_script_dir}/.."
_module=cumulus
_autogen_comment="\
#-------------------------------------------------------------------------------
# DO NOT MODIFY BY HAND
# Auto-generated by ${BASH_SOURCE[0]}
#-------------------------------------------------------------------------------
"

#-------------------------------------------------------------------------------
# Generate ${_module}-tf/terraform.tf
#-------------------------------------------------------------------------------

cat <<TF > "${_root_dir}/${_module}-tf/terraform.tf"
${_autogen_comment}
terraform {
  backend "s3" {
    region         = "${AWS_REGION}"
    bucket         = "${TERRAFORM_BACKEND_BUCKET}"
    key            = "${TERRAFORM_BACKEND_KEY_PREFIX}${_module}/terraform.tfstate"
    dynamodb_table = "${TERRAFORM_BACKEND_DYNAMODB_TABLE}"
  }
}
TF

#-------------------------------------------------------------------------------
# Generate ${_module}-tf/terraform.tfvars
#-------------------------------------------------------------------------------

cat <<TF > "${_root_dir}/${_module}-tf/terraform.tfvars"
${_autogen_comment}
region = "${AWS_REGION}"

cumulus_message_adapter_version = "1.3.0"
permissions_boundary_name       = "NGAPShRoleBoundary"

prefix = "${PREFIX}"

buckets = {
  internal = {
    name = "${BUCKETS_INTERNAL}"
    type = "internal"
  }
  private = {
    name = "${BUCKETS_PRIVATE}"
    type = "private"
  },
  protected = {
    name = "${BUCKETS_PROTECTED}"
    type = "protected"
  },
  public = {
    name = "${BUCKETS_PUBLIC}"
    type = "public"
  },
  dashboard = {
    name = "${BUCKETS_DASHBOARD}"
    type = "dashboard"
  }
  provider = {
    name = "${BUCKETS_PROVIDER}"
    type = "internal"
  }
  download = {
    name = "${BUCKETS_DOWNLOAD}"
    type = "protected"
  }
}

system_bucket = "${SYSTEM_BUCKET}"

cmr_client_id   = "csdap-cumulus-${STACK_SLUG}"
cmr_environment = "${CMR_ENVIRONMENT}"
cmr_provider    = "CSDA"
cmr_username    = "${CMR_USERNAME}"
cmr_password    = "${CMR_PASSWORD}"

urs_client_id       = "${URS_CLIENT_ID}"
urs_client_password = "${URS_CLIENT_PASSWORD}"

api_users = ${API_USERS:-[]}

# Name of secret in AWS secrets manager containing SSH keys for signing JWTs
# See https://github.com/asfadmin/thin-egress-app#jwt-cookie-secret
thin_egress_jwt_secret_name = "cumulus-${STACK_SLUG}-thin-egress-app-jwt-keys"

data_persistence_remote_state_config = {
  bucket = "${TERRAFORM_BACKEND_BUCKET}"
  key    = "${TERRAFORM_BACKEND_KEY_PREFIX}data-persistence/terraform.tfstate"
  region = "${AWS_REGION}"
}

oauth_provider     = "${OAUTH_PROVIDER:-earthdata}"
cmr_oauth_provider = "${CMR_OAUTH_PROVIDER:-earthdata}"

# Make archive API run as a private API gateway and accessible on port 8000
archive_api_port            = ${ARCHIVE_API_PORT:-8000}
private_archive_api_gateway = ${PRIVATE_ARCHIVE_API_GATEWAY:-true}

# Optional

# ecs_cluster_instance_subnet_ids = ["subnet-12345"]

## Optional. Required if using cmr_oauth_provider = "launchpad"
# launchpad_api = "launchpadApi"
# launchpad_certificate = "certificate"
# launchpad_passphrase = "passphrase"

## Optional. Oauth user group to validate the user against when using oauth_provider = "launchpad"
# oauth_user_group = "usergroup"

## Optional.  When using oauth_provider = "launchpad", and if you are configuring Cumulus to authenticate
## the dashboard via NASA's Launchpad SAML implementation.
## see Wiki: https://wiki.earthdata.nasa.gov/display/CUMULUS/Cumulus+SAML+Launchpad+Integration
# saml_entity_id                  = "Configured SAML entity-id"
# saml_assertion_consumer_service = "<Cumulus API endpoint>/saml/auth, e.g. https://example.com/saml/auth"

## Sandbox Launchpad saml2sso: https://auth.launchpad-sbx.nasa.gov/affwebservices/public/saml2sso
## Production Launchpad saml2sso: https://auth.launchpad.nasa.gov/affwebservices/public/saml2sso
# saml_idp_login                  = "nasa's saml2sso endpoint, e.g. https://example.gov/affwebservices/public/saml2sso"

## Sandbox Launchpad IDP metadata: https://auth.launchpad-sbx.nasa.gov/unauth/metadata/launchpad-sbx.idp.xml
## Production Launchpad IDP Metadata: https://auth.launchpad.nasa.gov/unauth/metadata/launchpad.idp.xml
# saml_launchpad_metadata_url     = "url of the identity provider public metadata xml file"

## Optional
# key_name      = "MY-KEY"

## Optional
# metrics_es_host = "xxxxxxxxxx.cloudfront.net"
# metrics_es_username = "user"
# metrics_es_password = "password"

## Optional. Required to send EMS ingest/distribution reports.
# ems_host              = "ems-host.nasa.gov"
# ems_port              = 22
# ems_path              = "/"
# ems_datasource        = "UAT"
# ems_private_key       = "ems-private.pem"
# ems_provider          = "CUMULUS"
# ems_retention_in_days = 30
# ems_submit_report     = true
# ems_username          = "user"

## Optional. Required to send logs to the Metrics ELK stack
# log_api_gateway_to_cloudwatch = false
# log_destination_arn = "arn:aws:logs:us-east-1:1234567890:destination:LogsDestination"
# additional_log_groups_to_elk = {
#  "MyLogs" = "/aws/lambda/my-logs"
# }

## Cumulus Distribution variables.

deploy_cumulus_distribution = true

## If using Cumulus Distribution, Toggle this after deployed to put the correct port in. (and hosts and config)
cumulus_distribution_url = "${CUMULUS_DISTRIBUTION_URL}"

## CSDAP configuration for cumulus distribution
csdap_client_id = "${CSDAP_CLIENT_ID}"
csdap_client_password = "${CSDAP_CLIENT_PASSWORD}"
csdap_host_url = "${CSDAP_HOST_URL}"
TF
